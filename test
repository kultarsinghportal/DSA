using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;

public class SalesforceApi
{
    private readonly SalesforceAuth _salesforceAuth;

    public SalesforceApi(SalesforceAuth salesforceAuth)
    {
        _salesforceAuth = salesforceAuth;
    }

    public async Task<string> GetAllOpportunitiesAsync()
    {
        using (var httpClient = new HttpClient())
        {
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", _salesforceAuth.AccessToken);
            httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

            // SOQL query to select opportunities. Modify the query to fit your needs.
            string soqlQuery = "SELECT Id, Name, CloseDate, StageName, Amount FROM Opportunity";
            string requestUrl = $"{_salesforceAuth.InstanceUrl}/services/data/vXX.0/query/?q={Uri.EscapeDataString(soqlQuery)}";

            var response = await httpClient.GetAsync(requestUrl);

            if (response.IsSuccessStatusCode)
            {
                string responseContent = await response.Content.ReadAsStringAsync();
                return responseContent; // Contains JSON string of all opportunities
            }
            else
            {
                string responseContent = await response.Content.ReadAsStringAsync();
                throw new Exception($"Failed to retrieve opportunities: {responseContent}");
            }
        }
    }
}
