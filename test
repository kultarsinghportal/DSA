 [HttpPost("create")]
    public async Task<IActionResult> Create()
    {
        var body = await new StreamReader(Request.Body).ReadToEndAsync();
        _logger.LogInformation($"Received JSON: {body}");

        var opportunity = JsonConvert.DeserializeObject<Opportunity>(body);
        return opportunity switch
        {
            null => LogAndReturnBadRequest("Failed to deserialize Opportunity object"),
            _ => await CreateOpportunity(opportunity)
        };
    }

    private IActionResult LogAndReturnBadRequest(string message)
    {
        _logger.LogError(message);
        return BadRequest(message);
    }

    private async Task<IActionResult> CreateOpportunity(Opportunity opportunity)
    {
        _logger.LogInformation($"Opportunity received: Name={opportunity.Name}, StageName={opportunity.StageName}, CloseDate={opportunity.CloseDate}");
        var id = await _opportunityService.CreateOpportunityAsync(opportunity);
        _logger.LogInformation($"Created Opportunity: {id}");
        return Ok(new { Id = id, Message = "Opportunity created successfully." });
    }
